"use client"

import { useState } from "react"
import { ArrowLeft, Eye, ExternalLink } from "lucide-react"
import { Button } from "@/components/ui/button"
import { WaitlistLandingPage } from "./waitlist-landing-page"
import { Tabs, TabsList, TabsTrigger } from "@/components/ui/tabs"
import Link from "next/link"

interface WaitlistDemoProps {
  onBack: () => void
}

export function WaitlistDemo({ onBack }: WaitlistDemoProps) {
  const [activeTab, setActiveTab] = useState("active")

  // Dados de exemplo para a demonstra√ß√£o
  const demoData = {
    eventName: "Sympla'palooza",
    eventDate: "Ter√ßa-feira, 13/05/2025, 14h30 - Quinta-feira, 15/05/2025, 14h30",
    eventLocation: "QG Sympla BH, Minas Gerais",
    listName: "Lista de Espera - Sympla'palooza",
    description: `üéâ Sympla'palooza est√° chegando. E vai ser √©pico.
Prepare-se para viver a noite mais insana do ano.

O Sympla'palooza n√£o √© apenas uma festa. √â um ritual de luz, som e emo√ß√£o, onde cada batida pulsa com a energia de milhares de pessoas conectadas pelo mesmo desejo: viver o agora.

üö® Vagas limitadas. Cadastre-se na lista de espera e garanta seu lugar neste espet√°culo.

‚ú® O que √© o Sympla'palooza?
Imagine uma atmosfera el√©trica, onde as silhuetas dan√ßam em sintonia sob um c√©u de luzes digitais, envolvidas por vis√µes et√©reas de human√≥ides de vidro em telas glitch. No centro de tudo, um palco moderno, comandado por DJs que n√£o tocam m√∫sica ‚Äì eles invocam experi√™ncias.

Sympla'palooza √© mais que um evento.
√â um chamado.
√â o encontro dos que querem sair da rotina, se perder na multid√£o e encontrar a si mesmos no som.`,
    imageUrl: "/default-event-image.jpg",
    formFields: [
      { id: "field_1", type: "text", label: "Nome completo", required: true, placeholder: "Seu nome completo" },
      { id: "field_2", type: "email", label: "Email", required: true, placeholder: "seu@email.com" },
      { id: "field_3", type: "tel", label: "Telefone", required: true, placeholder: "(00) 00000-0000" },
    ],
  }

  return (
    <div className="max-w-full">
      <div className="flex justify-between items-center mb-6">
        <div>
          <h1 className="text-2xl font-bold text-[#4c576c]">Demo - Sympla Waitlist</h1>
          <p className="text-[#848c9b]">Visualize a p√°gina de lista de espera em diferentes estados</p>
        </div>
        <Button variant="outline" className="flex items-center gap-2" onClick={onBack}>
          <ArrowLeft size={16} />
          Voltar para o dashboard
        </Button>
      </div>

      <div className="bg-white p-6 rounded-lg shadow-sm mb-6">
        <div className="flex flex-col space-y-4">
          <h2 className="text-lg font-semibold text-[#4c576c]">Controles de Demonstra√ß√£o</h2>
          <p className="text-[#848c9b]">
            Alterne entre os diferentes estados da p√°gina para demonstrar aos stakeholders internos.
          </p>

          <Tabs defaultValue="active" className="w-full" onValueChange={setActiveTab}>
            <TabsList className="grid w-full grid-cols-2">
              <TabsTrigger value="active">Lista Ativa</TabsTrigger>
              <TabsTrigger value="closed">Lista Encerrada</TabsTrigger>
            </TabsList>
            <div className="mt-4 p-4 bg-gray-50 rounded-md">
              <div className="flex items-center">
                <div
                  className={`w-3 h-3 rounded-full mr-2 ${activeTab === "active" ? "bg-green-500" : "bg-red-500"}`}
                ></div>
                <span className="font-medium">
                  Status atual: {activeTab === "active" ? "Lista ativa e aceitando inscri√ß√µes" : "Lista encerrada"}
                </span>
              </div>
              <p className="text-sm text-[#848c9b] mt-2">
                {activeTab === "active"
                  ? "Neste estado, a p√°gina est√° coletando inscri√ß√µes normalmente."
                  : "Neste estado, a p√°gina indica que as inscri√ß√µes foram encerradas, mas ainda permite o preenchimento do formul√°rio."}
              </p>
            </div>
          </Tabs>

          <div className="flex justify-between items-center mt-4 pt-4 border-t">
            <h3 className="font-medium text-[#4c576c]">Abrir em nova aba</h3>
            <div className="flex gap-2">
              <Link href="/demo/active" target="_blank">
                <Button
                  variant="outline"
                  className="flex items-center gap-2 border-green-500 text-green-600 hover:bg-green-50"
                >
                  <ExternalLink size={16} />
                  Lista Ativa
                </Button>
              </Link>
              <Link href="/demo/closed" target="_blank">
                <Button
                  variant="outline"
                  className="flex items-center gap-2 border-red-500 text-red-600 hover:bg-red-50"
                >
                  <ExternalLink size={16} />
                  Lista Encerrada
                </Button>
              </Link>
            </div>
          </div>
        </div>
      </div>

      <div className="bg-white rounded-lg shadow-sm overflow-hidden">
        <div className="border-b p-4 flex justify-between items-center bg-gray-50">
          <h3 className="font-medium text-[#4c576c]">Visualiza√ß√£o da P√°gina</h3>
          <Button variant="outline" className="flex items-center gap-2" onClick={onBack}>
            <Eye size={16} className="mr-1" />
            Voltar ao Dashboard
          </Button>
        </div>
        <div className="h-[calc(100vh-300px)] overflow-auto">
          <WaitlistLandingPage
            eventName={demoData.eventName}
            eventDate={demoData.eventDate}
            eventLocation={demoData.eventLocation}
            listName={demoData.listName}
            description={demoData.description}
            imageUrl={demoData.imageUrl}
            formFields={demoData.formFields}
            isDemo={true}
            demoState={activeTab}
          />
        </div>
      </div>
    </div>
  )
}
